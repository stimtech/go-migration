# This workflow is generated and will be automatically synchronized.
# Source: https://github.com/stimtech/infra-workflows/blob/main/pipeline-library-go.yml

name: Pipeline

on:
  push:
    branches: [main]
  pull_request:

jobs:
  configuration:
    name: Gather configuration
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      action_config: ${{ steps.action_config.outputs.data }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Read STIM action configuration
        id: action_config
        run: |
          if [[ -f ".github/stim-pipeline.json" ]]; then
            echo data=$(cat .github/stim-pipeline.json) >> $GITHUB_OUTPUT
          else
            echo data={} >> $GITHUB_OUTPUT
          fi

  go-analyze:
    name: Analyze Go
    needs: configuration
    runs-on: self-hosted
    timeout-minutes: 5
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Check out action
        uses: actions/checkout@v3
        with:
          repository: stimtech/action-go-analyze
          ref: 4
          path: ./.github/actions/go-analyze
          token: ${{ secrets.GH_PAT }}

      - name: Analyze Go
        uses: ./.github/actions/go-analyze
        with:
          codacy_token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          gh_credentials: ${{ secrets.GIT_CREDENTIALS }}

  integration-test:
    name: Integration tests
    needs: configuration
    if: fromJSON(needs.configuration.outputs.action_config).actions.action-go-integration-test.enable
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Check out action
        uses: actions/checkout@v3
        with:
          repository: stimtech/action-go-integration-test
          ref: 2
          path: ./.github/actions/go-integration-test
          token: ${{ secrets.GH_PAT }}

      - name: Run integration tests
        uses: ./.github/actions/go-integration-test
        with:
          gh_credentials: ${{ secrets.GIT_CREDENTIALS }}
          bitbucket_credentials: ${{ secrets.BITBUCKET_GIT_CREDENTIALS }}
          codacy_token: ${{ secrets.CODACY_PROJECT_TOKEN }}

  pipeline-complete:
    name: Pipeline Complete
    needs:
      - configuration
      - go-analyze
      - integration-test
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Check out action
        uses: actions/checkout@v3
        with:
          repository: stimtech/action-pipeline-complete
          ref: 2
          path: ./.github/actions/pipeline-complete
          token: ${{ secrets.GH_PAT }}

      - name: Pipeline Complete
        uses: ./.github/actions/pipeline-complete
        with:
          token: ${{ secrets.GH_PAT }}
          secrets: ${{ toJSON(secrets) }}
          needs_context: ${{ toJSON(needs) }}
          notify: false
